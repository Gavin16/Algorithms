计费子系统
(1) 计费类型有哪些?

(2) 计费数据如何确保完全同步到账单系统? 中途同步失败该如何处理?



计量子系统
(1) Redis集群如何保证数据不丢失?
    -- 不追求redis 集群数据不丢失,而是

(2) Redis数据校验如何保证剩余调用数扣减的准确性?
    -- 在MQ消息中增加调用次数计数值,然后若redis集群发生主从选举，
       出现数据不一致情况，必然导致DB中出现调用次数重复的日志出现
       使用定时任务对调用重复的日志进行处理，并将重复数量同步到redis中即可。
       这样可以在出现master宕机情况下让调用数能达到最终一致性(准确性)

(3) Kafka消息发送如何保障消息发送成功?
    -- 增加重试次数,设置 kafka ack 字段为 -1，确保生产者消息到达broker之后会对ISR进行同步


(4) 客户端请求超时如何处理? RestTemplate 调用超时问题? 连接池该怎么配置?


(5) 调用日志如何快速查询统计? 如何确保数据同步不丢失?


账单子系统
(1) 账单数据是如何做账单核验的?

(2) 账单支付功能是如何设计的? 如何保证支付与银行的数据一致性?
    -- 工行支付功能设计
    (1) 平台发起支付申请，生成本流水号;
    (2) 工行返回支付申请成功，返回页面跳转连接; 并将本地流水及支付信息存储到redis中
    (3) 前端页面使用U盾在工行的页面完成支付
    (4) 工行支付完成后回调支付完成的回写接口，完成支付状态的更新和流水的写入
    (5) 若工行未成功回调回写接口, 使用定时任务扫描redis 中现有流水,并发起想工行的查询请求
    (6) 定时任务中获取到本地流水对应工行那边的支付状态后更新到账单支付状态

